plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '2.0.21'
    id 'org.jetbrains.kotlin.kapt' version '2.0.21'
}

group = 'com.jingnb666.saltSnowPlugin'
version = '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
    maven {
        url = 'https://jitpack.io'
    }
}

dependencies {
    implementation 'net.java.dev.jna:jna-platform:5.17.0'
    compileOnly 'net.java.dev.jna:jna:5.17.0'
    compileOnly "com.github.Moriafly:spw-workshop-api:0.1.0-dev08"
    kapt "com.github.Moriafly:spw-workshop-api:0.1.0-dev08"

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

def pluginClass = "com.jingnb666.saltSnowPlugin"
def pluginId = "雪花窗口插件"
def pluginVersion = "1.0.0"
def pluginProvider = "CatCat. & GaodaGG"

tasks.named("jar") {
    destinationDirectory = file(System.getenv("APPDATA") + "/Salt Player for Windows/workshop/")
    archiveFileName = "plugin-${pluginId}-${pluginVersion}.jar"

    manifest {
        attributes["Plugin-Class"] = pluginClass
        attributes["Plugin-Id"] = pluginId
        attributes["Plugin-Version"] = pluginVersion
        attributes["Plugin-Provider"] = pluginProvider
    }
}

tasks.register("plugin", Jar) {
    destinationDirectory = file(System.getenv("APPDATA") + "/Salt Player for Windows/workshop")
    archiveFileName = "plugin-${pluginId}-${pluginVersion}.zip"
    archiveBaseName.set("plugin-" + pluginId + "-" + pluginVersion)

    into("classes") {
        with(tasks.named("jar").get())
    }
    dependsOn(configurations.runtimeClasspath)
    into("lib") {
        from({
            configurations.runtimeClasspath
                    .filter { it.name.endsWith("jar") }
        })
    }
    archiveExtension = 'zip'
}